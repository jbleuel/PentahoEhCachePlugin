<project name="PentahoEhCachePlugin" default="default" basedir=".">

	  <description>
	      Pentaho EhCache Plugin
	    </description>

	  <tstamp prefix="start"/>

	  <!-- system properties to use -->
	  <property name= "cr" value="${line.separator}"/> 
		
	  <!-- set global properties for this build -->
	
	  <property name="src"        			location="src"/> 
	  <property name="classes"        		location="classes"/> 
	  <property name="lib"        			location="lib"/>
	  <property name="distrib"        		location="ehCachePlugin"/>
	  <property name="libext"     			location="libext"/>
	  <property name="libswt"     			location="libswt"/>
	  <property name="libehcache"  			location="libehcache"/>
	  <property name="zipfilename"  		value="ehCachePlugin_v04.zip"/>
	  <property name="latestArchive"  		value="ehCachePlugin_latest.zip"/>
	  <property name="deploydir"     		location="/Volumes/others/Tools/Pentaho/plugins/steps/ehCachePlugin"/>
	
	  <target name="init" description="create timestamp and directories">
    	<echo>Init...</echo>
	  	
	    <tstamp/>
	    <mkdir dir="${classes}"/>
	    <mkdir dir="${lib}"/>
	    <mkdir dir="${distrib}"/>
	    <delete file="${zipfilename}"/>
	  </target>

	  <!--
	       ==========================
	            Compile the code
	       ==========================
	  -->

	  <target name="compile" depends="init" description="compile the source " >
	  	<echo>Compiling EhCache Plugin...</echo>
	    <javac srcdir="${src}" 
	    	   destdir="${classes}">

	    	<classpath id="cpath">
				<fileset dir="${libext}" 		includes="*.jar"/>
				<fileset dir="${libswt}" 		includes="*.jar"/>
				<fileset dir="${libswt}/win32/" includes="*.jar"/>
				<fileset dir="${libehcache}" includes="*.jar"/>
	    		<fileset dir="${src}" includes="*.jar"/>
		  		</classpath>
	    </javac>
	  </target>
	
			
	  <!--
	       ==========================
	                library
	       ==========================
	  -->
		
	  <target name="dummy" depends="compile, copy" description="generate the Plugin library">
	  	<echo>Generating the Kettle library ...</echo>
	  	<jar 
	    	jarfile="${lib}/PentahoEhCachePlugin.jar" 
	    	basedir="${classes}" 
	    	includes="**/*,**/*.png,**/*.xml,**/*.properties,**/*.jar"/>	 
	  </target>

	  <!-- ==========================
	          Copy additional files
	       ==========================
	  -->

	  <target name="copy" depends="compile" description="copy images etc to classes directory" >
	  	<echo>Copying images etc to classes directory...</echo>
	    <copy todir="${lib}">
	    	<fileset 
	    		dir="${src}" 
	    		includes="**/*.png,**/*.xml,**/*.properties,**/*.jar,**/*.ktr"/>
	  	    </copy>
	  </target>
	  

	  <!--
	       ==========================
	           distrib for plugin
	       ==========================
	  -->

	  <target name="distrib" depends="dummy" description="Create the distribution package..." >
	  	<echo>Copying libraries to distrib directory...</echo>
	    <copy todir="${distrib}">
	    	<fileset 
	    		dir="${lib}" 
	    		includes="**/*.jar,**/*.png,**/*.xml,**/*.properties,**/*.ktr"/>
	  	    </copy>
	  	<copy todir="${distrib}">
	    	<fileset 
	    		dir="${libehcache}" 
	    		includes="**/*.jar,**/*.png,**/*.xml,**/*.properties,**/*.ktr"/>
	  	    </copy>
	  	    
	  	<!-- Create a new Zip Archive -->    
	  	<zip destfile="releases/${zipfilename}"
       		basedir="${distrib}"
       		update="true"
  			/>
  			
  		<!-- create a clone to _latest file -->	
  	   <copy file="releases/${zipfilename}" tofile="${latestArchive}"/>
  			
	  </target>

	  <!--
	       ==========================
	            deploy to Kettle
	       ==========================
	  -->

	  <target name="deploy" depends="distrib" description="Deploy distribution..." >
	  	<echo>deploying plugin...</echo>
	    <copy todir="${deploydir}">
	    	<fileset 
	    		dir="${distrib}" 
	    		includes="**/*.*"/>
	  	    </copy>
	  </target>

	<!--
	       ==========================
	          Default target: all
	       ==========================
	  -->
	<target name="default" depends="deploy" description="default = build all"/>

	<!--
	       ==========================
	              C L E A N
	       ==========================
	  -->

	  <target name="clean"  description="clean up generated files" >
	    <delete dir="${classes}"/>
	    <delete dir="${lib}"/>
	    <delete dir="${distrib}"/>
	    <delete file="${zipfilename}"/>
	  </target>
	
</project>
